name: e-proc-api

services:

  gateway:
    build:
      context: ../gateway
      dockerfile: Dockerfile
    ports:
      - "${GATEWAY_PORT:-80}:80"
    image: nibroos/e-proc-gateway-dev:1.0.250204
    networks:
      - network
    depends_on:
      - service
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_DB_TEST: ${POSTGRES_DB_TEST}
      POSTGRES_PORT: ${POSTGRES_PORT}
      POSTGRES_HOST: ${POSTGRES_HOST}
      GATEWAY_PORT: ${GATEWAY_PORT}
      SERVICE_GRPC_PORT: ${SERVICE_GRPC_PORT}
      SERVICE_REST_PORT: ${SERVICE_REST_PORT}
      JWT_SECRET: ${JWT_SECRET}
      REDIS_HOST: ${REDIS_HOST}
      REDIS_PORT: ${REDIS_PORT}
      REDIS_PASSWORD: ${REDIS_PASSWORD}
      REDIS_DB: ${REDIS_DB}
      SERVICE_TYPE: main

  service:
    build: 
      context: ../service
      dockerfile: Dockerfile.dev
    image: nibroos/e-proc-service-dev:1.0.250204
    networks:
      - network
    ports:
      - "${USERS_SERVICE_GRPC_PORT:-50051}:${USERS_SERVICE_GRPC_PORT:-50051}"
      - "${USERS_SERVICE_REST_PORT:-4001}:${USERS_SERVICE_REST_PORT:-4001}"
    depends_on:
      - postgres
    volumes:
      - ./../service:/app
    env_file:
      - .env
    environment:
      SEEDER_DIR: /apps/internal/database/seeders

  postgres:
    image: postgres:13-alpine
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-secret}
      POSTGRES_DB: ${POSTGRES_DB:-e_proc_api}
    networks:
      - network
    ports:
      - "${POSTGRES_PORT:-5432}:5432"
    volumes:
      - postgres-e-proc-api:/var/lib/postgresql/data

volumes:
  postgres-e-proc-api:

networks:
  network:
    driver: bridge
